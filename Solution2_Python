# Project Euler question 2
# solved in Python 3.6.0

"""
Even Fibonacci numbers
Problem 2

Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
find the sum of the even-valued terms.
"""

import time

start = time.time()

def fib_sum():
    fib = [1,2]
    n1,n2 = 1,2
    while n1+n2 < 4000000:
        fib.append(n1+n2)
        n1,n2 = n2, n1+n2
    return sum([i for i in fib if i % 2 == 0])
    
s = fib_sum()
    
elapsed = time.time() - start
                
print("The sum of the even-valued terms is %s. (returned in %s seconds)" % (s,elapsed)) 

# Prints "The sum of the even-valued terms is 4613732. (returned in 0.0 seconds)"
